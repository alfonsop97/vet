{"ast":null,"code":"var _jsxFileName = \"/Users/alfonsopimentel/Desktop/app/Test/src/components/Appointments.tsx\";\nimport './Styles/Appointments.css';\n\n//GraphQL function would return appointments object\n//appointments would have \n//date and time\n//appointment type\n//client name\n//and a notes string\n/*looks into active appointments \n\nif(appointments) {\n    display appointments\n} else {\n    display no appointments\n}\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar appointment = {\n  date: \"06/04/2023\",\n  time: \"5:00pm\",\n  type: \"General\",\n  name: \"Odesza\",\n  note: \"Allergic to bacon treats\"\n};\nif (appointment.active === \"true\") {}\nconst Appointments = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: appointment.note\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_c = Appointments;\nexport default Appointments;\nvar _c;\n$RefreshReg$(_c, \"Appointments\");","map":{"version":3,"names":["appointment","date","time","type","name","note","active","Appointments"],"sources":["/Users/alfonsopimentel/Desktop/app/Test/src/components/Appointments.tsx"],"sourcesContent":["import './Styles/Appointments.css';\n\n//GraphQL function would return appointments object\n//appointments would have \n//date and time\n//appointment type\n//client name\n//and a notes string\n/*looks into active appointments \n\nif(appointments) {\n    display appointments\n} else {\n    display no appointments\n}\n*/\n var appointment = {\n    \n    date: \"06/04/2023\",\n    time: \"5:00pm\",\n    type: \"General\",\n    name: \"Odesza\",\n    note: \"Allergic to bacon treats\"\n }\n\n if (appointment.active === \"true\") {\n\n }\nconst Appointments = () => {\n    return (\n        <>\n        <p>{appointment.note}</p>\n        </>\n    );\n};\nexport default Appointments;"],"mappings":";AAAA,OAAO,2BAA2B;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAQC,IAAIA,WAAW,GAAG;EAEfC,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE;AACT,CAAC;AAED,IAAIL,WAAW,CAACM,MAAM,KAAK,MAAM,EAAE,CAEnC;AACD,MAAMC,YAAY,GAAG,MAAM;EACvB,oBACI;IAAA,uBACA;MAAA,UAAIP,WAAW,CAACK;IAAI;MAAA;MAAA;MAAA;IAAA;EAAK,iBACtB;AAEX,CAAC;AAAC,KANIE,YAAY;AAOlB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}